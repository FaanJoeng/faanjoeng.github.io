Java应用性能监控与调优
################

基于JDK命令行工具的监控
**********************

JVM参数类型
+++++++++++

标准参数
========
-help
-server
-client
-version -showversion
-cp -classpath

X参数
======
-Xlint 解释执行
-Xcomp 第一次使用就编译为本地代码
-Xmixed 混合模式，JVM自己来决定是否编译成本地代码   

XX参数
======
非标准化参数 相对不稳定 主要用于JVM调优和Debug

Boolean类型
:::::::::::

格式:-XX[+-]<name> 表示启用或者禁用name属性

例子 -XX:+UseG1GC

非Boolean类型
:::::::::::::

格式:-XX:<name>=<value> 表示name属性的值是value

比如: -XX:GCTimeRatio=19

-Xmx等价于-XX:MaxHeapSize
-Xms等价于-XX:InitialHeapSize

ps -ef | grep tomcat

jinfo -flag MaxHeapSize 进程ID  结果单位为K


查看JVM运行时参数
+++++++++++++++++

-XX:+PrintFlagsInitial 查看初始值
-XX:+PrintFlagsFinal 查看最终值
-XX:+UnlockExperimentalVMOptions 解锁实验参数
-XX:+PrintCommandLineFlags 打印命令行参数

= 表示默认值
:= 表示被用户或JVM修改过的值


jinfo -flag MaxHeapSize pid

jindo -flags pid 打印非默认值

jps -l


jstat查看JVMt统计信息
+++++++++++++++++++++

jstat -class 类加载
jstat -compiler JIT编译
jstat -gc 垃圾收集
jstat -printcompilatioin 

jstat -class pid 1000 10  每1000毫秒输出10次

实战内存溢出
+++++++++++++++


导出内存溢出文件
+++++++++++++++++++

内存溢出自动导出
===================

-XX:+HeapDumpOnOutOfMemoryError
-XX:+HeapDumpPath=./

jmap命令手动导出
===================
jmap -dump:format=b,file=heap.hprof pid

， 查看内存占用


MAT分析内存溢出
++++++++++++++++++


基于Btrace的监控调试
**************************


Tomcat调优
************

远程Debug
++++++++++
./bin/startup.sh 在最后一行的start前加入jpda
./bin/catalina.sh










